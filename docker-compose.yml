services:
  indicator-service:
    build: .
    container_name: indicator-service
    restart: on-failure
    networks:
      - att-network
    environment:
      - REDIS_HOST=indicators-redis
      - REDIS_PORT=6379
      - MONGO_URI=mongodb://indicators-mongo/indicators
      - RABBITMQ_URL=amqp://guest:guest@indicators-rabbitmq/
    depends_on:
      rabbitmq:
        condition: service_healthy
      indicators-mongo:
        condition: service_healthy
      indicators-redis:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app
          ignore:
            - __pycache__/
        - action: rebuild
          path: requirements.txt

  indicators-redis:
    image: "redis:alpine"
    container_name: indicators-redis
    restart: on-failure
    networks:
      - att-network

  indicators-mongo:
    image: "mongo:latest"
    container_name: indicators-mongo
    environment:
      MONGO_INITDB_DATABASE: indicators
    volumes:
      - indicators_db:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 6s
      timeout: 5s
      retries: 5
      start_period: 6s
    restart: on-failure
    networks:
      - att-network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: indicators-rabbitmq
    ports:
      - "5672:5672"
      - "15674:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 6s
      timeout: 5s
      retries: 5
      start_period: 6s
    restart: on-failure
    networks:
      - att-network

volumes:
  indicators_db:
